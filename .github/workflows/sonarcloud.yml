name: CI/CD Pipeline
on:
  push:
    branches:
      - main
      - staging
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build the project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          echo "Installing requirements..."
          pip install -r requirements.txt
          pip install coverage
  test:
    name: Run tests and check coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          echo "Installing requirements..."
          pip install -r requirements.txt
          pip install coverage
      - name: Run unit tests and check coverage
        run: |
          echo "Running unit tests..."
          coverage run manage.py test
          echo "Exporting results to htmlcov/coverage.html..."
          coverage html
          echo "Coverage exported. Total coverage:"
          grep -oP '<span class="pc_cov">\K[^<]+%' ./htmlcov/index.html
          coverage report
          coverage xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
  sonarcloud-check:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner -Dsonar.host.url=https://sonarcloud.io \
                        -Dsonar.login=$SONAR_TOKEN \
                        -Dsonar.python.coverage.reportPaths=coverage.xml \
                        -Dsonar.projectKey=Kelompok-5-PPL-A_MAAMS-NG-BE \
                        -Dsonar.organization=kelompok-5-ppl-a-1 \
                        -Dsonar.sources=MAAMS_NG_BE,question,tag,validator \
                        -Dsonar.tests=MAAMS_NG_BE,question,tag,validator \
                        -Dsonar.test.inclusions=**/tests/**/*.py \
                        -Dsonar.test.exclusions=**/migrations/*.py \
                        -Dsonar.coverage.exclude=**/apps.py,**/admin.py,**/__init__.py,**/migrations/*.py,manage.py